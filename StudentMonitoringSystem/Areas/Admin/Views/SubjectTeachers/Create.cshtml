@model StudentMonitoringSystem.Models.SubjectTeacher

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SubjectTeacher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CampusID, "CampusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CampusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherID, "TeacherID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TeacherID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeacherID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionID, "SectionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>



        $(document).ready(function () {

            $('#CampusID').change(function () {
                var CampusID = $(this).val();
                $.getJSON("/subjects/GetClasses?ID=" + CampusID,
                    function (data) {
                        var selectOptions = "";
                        $.each(data, function (key, val) {
                            // alert(val.ClassID);

                            selectOptions += "<option value='" + val.ID + "'>" + val.Name + "</option>";

                        });

                        $('#ClassID').empty().html(selectOptions);
                    });
            });
        });


        $(document).ready(function () {

            $('#CampusID').change(function () {
                var CampusID = $(this).val();
                $.getJSON("/subjects/GetTeacher?ID=" + CampusID,
                    function (data) {
                        var selectOptions = "";
                        $.each(data, function (key, val) {
                            // alert(val.ID);
                            selectOptions += "<option value='" + val.ID + "'>" + val.Name + "</option>";

                        });

                        $('#TeacherID').empty().html(selectOptions);
                    });
            });




        });





        $(document).ready(function () {

            $('#ClassID').change(function () {
                var ClassID = $(this).val();
                $.getJSON("/ExamsTimeTables/GetSection?ID=" + ClassID,
                    function (data) {
                        var selectOptions = "";
                        $.each(data, function (key, val) {
                            // alert(val.ClassID);
                            selectOptions += "<option value='" + val.ID + "'>" + val.Name + "</option>";

                        });

                        $('#SectionID').empty().html(selectOptions);
                    });
            });
        });


        $(document).ready(function () {

            $('#ClassID').change(function () {
                var ClassID = $(this).val();
                $.getJSON("/ExamsTimeTables/GetSubject?ID=" + ClassID,
                    function (data) {
                        var selectOptions = "";
                        $.each(data, function (key, val) {
                            // alert(val.ClassID);
                            selectOptions += "<option value='" + val.ID + "'>" + val.SubjectName + "</option>";

                        });

                        $('#SubjectID').empty().html(selectOptions);
                    });
            });
        });

    </script>

}


