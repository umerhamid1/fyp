@model StudentMonitoringSystem.Models.ExamsTimeTable

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ExamsTimeTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.CampusID, "CampusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampusID", String.Empty@*null, htmlAttributes: new { @class = "form-control" }*@)
                @Html.ValidationMessageFor(model => model.CampusID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExamsTypeID, "ExamsTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExamsTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExamsTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClassID", String.Empty @*null, htmlAttributes: new { @class = "form-control" }*@)
                @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubjectID", String.Empty @*null, htmlAttributes: new { @class = "form-control" }*@)
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTimeHour, "StartTimeHour", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StartTimeHour", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartTimeHour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StratTimeMinute, "StratTimeMinute", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StratTimeMinute", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StratTimeMinute, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTimeHour, "EndTimeHour", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EndTimeHour", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EndTimeHour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTimeMinuts, "EndTimeMinuts", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EndTimeMinuts", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EndTimeMinuts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    

<script src="~/Scripts/jquery-3.0.0.min.js"></script>

<script>



                        $(document).ready(function () {

                            $('#CampusID').change(function () {
                                var CampusID = $(this).val();
                                $.getJSON("/ExamsTimeTables/GetClasses?ID=" + CampusID,
                                    function (data) {
                                        var selectOptions = "";
                                        $.each(data, function (key, val) {
                                            // alert(val.ClassID);
                                            //selectOptions.filter((res) => {
                                            //    return res;
                                            //});
                                            selectOptions += "<option value='" + val.ID + "'>" + val.Name + "</option>";

                                        });

                                        $('#ClassID').empty().html(selectOptions);
                                    });
                            });
                        });


                        $(document).ready(function () {

                            $('#ClassID').change(function () {
                                var ClassID = $(this).val();
                                $.getJSON("/ExamsTimeTables/GetSection?ID=" + ClassID,
                                    function (data) {
                                        var selectOptions = "";
                                        $.each(data, function (key, val) {
                                            // alert(val.ClassID);
                                            selectOptions += "<option value='" + val.ID + "'>" + val.Name + "</option>";

                                        });

                                        $('#SectionID').empty().html(selectOptions);
                                    });
                            });
                        });


                        $(document).ready(function () {

                            $('#ClassID').change(function () {
                                var ClassID = $(this).val();
                                $.getJSON("/ExamsTimeTables/GetSubject?ID=" + ClassID,
                                    function (data) {
                                        var selectOptions = "";
                                        $.each(data, function (key, val) {
                                            // alert(val.ClassID);
                                            selectOptions += "<option value='" + val.ID + "'>" + val.SubjectName + "</option>";

                                        });

                                        $('#SubjectID').empty().html(selectOptions);
                                    });
                            });
                        });
                    



                      













</script>



}
