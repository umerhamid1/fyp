@model StudentMonitoringSystem.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout1.cshtml";

    ViewBag.heading = "Students";

    ViewBag.directory1 = "Edit";
    ViewBag.directory2 = "Add";
    ViewBag.directory3 = "Student";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col">
            <section class="card">
                <header class="card-header">
                    <div class="card-actions">
                        <a href="#" class="card-action card-action-toggle" data-card-toggle> </a>

                    </div>

                    <h2 class="card-title">Edit Student's Details</h2>
                </header>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group row">
                    @Html.LabelFor(model => model.StudentID, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group row">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                
                
            <div class="form-group row">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                <div class="col-md-6">
                    Male
                    @Html.RadioButtonFor(model => model.Gender, "Male")
                    Female
                    @Html.RadioButtonFor(model => model.Gender, "Female")
                </div>
            </div>



                <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group row">
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>

              
                    @*@Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })*@
                   
                        @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                  

                <div class="form-group row">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ParentsID, "ParentsID", htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2", @style = "display:none" })
                    <div class="col-md-6">
                        @Html.DropDownList("ParentsID", null, htmlAttributes: new { @readonly = "readonly", @class = "form-control", @style = "display:none"})
                        @Html.ValidationMessageFor(model => model.ParentsID, "", new { @class = "text-danger", @style = "display:none" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ClassID, "Class", htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group row">
                    @Html.LabelFor(model => model.SectionID, "Section", htmlAttributes: new { @class = "col-lg-3 control-label text-lg-right pt-2", @style = "font-weight: bold;" })
                    <div class="col-md-6">
                        @*Approved
                @Html.RadioButtonFor(model => model.IsApproved, "Approved")
                Reject
                @Html.RadioButtonFor(model => model.IsApproved, "Reject")*@

                        @Html.DropDownList("SectionID", null, htmlAttributes: new {@class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
                    </div>
                </div>
                       
                   

                <div class="form-group row">
                    @Html.LabelFor(model => model.AdmissionYear, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.AdmissionYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdmissionYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.HiddenFor(model => model.IsApproved, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;" })
                    <div class="col-md-6">
                        @Html.HiddenFor(model => model.IsApproved, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.CampusID, "CampusID", htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2" , @style = "display:none" })
                    <div class="col-md-6">
                        @Html.DropDownList("CampusID", null, htmlAttributes: new { @readonly = "readonly", @class = "form-control" , @style = "display:none" })
                        @Html.ValidationMessageFor(model => model.CampusID, "", new { @class = "text-danger" , @style = "display:none" })
                    </div>
                </div>

                
                <footer class="card-footer text-right">
                    <input type="submit" href="/Students/NavTab" value="Save"  class="btn btn-primary"/>
                    <button type="reset" class="btn btn-default">@Html.ActionLink("Back", "NavTab")</button>
                </footer>
                
                
                

                    <div>
                           
                    </div>



   
                </div>
            </section>
        </div>
    </div>
          
            

            }
    

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
