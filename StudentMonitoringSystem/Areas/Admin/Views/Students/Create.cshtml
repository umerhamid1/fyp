@model StudentMonitoringSystem.Models.AddmissionViewModel

@{



    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    ViewBag.heading = "Students";

    ViewBag.directory1 = "New Student";
    ViewBag.directory2 = "Add";
    ViewBag.directory3 = "Student";
    
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
    <div class="col">
    <section class="card">
    <header class="card-header">
        <div class="card-actions">
            <a href="#" class="card-action card-action-toggle" data-card-toggle> </a>
                      
        </div>

        <h2 class="card-title">Admission</h2>
    </header>
    <div class="card-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.DOB,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>
        
        

        @*<div class="form-group row">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@
        
        <div class="form-group row">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @*Male
                @Html.RadioButtonFor(model => model.Gender,"Male")
                Female
                @Html.RadioButtonFor(model => model.Gender,"female")*@
                
                Male  @Html.RadioButton("Gender","Male",true)  
                Female @Html.RadioButton("Gender","Female")  
            </div>
        </div>

            <div class="form-group row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Nationality, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
            </div>
        </div>

     

        <div class="form-group row">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group row">
            @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group row">
            @Html.LabelFor(model => model.SectionID, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.SectionID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>*@



        <div class="form-group row">
            @Html.LabelFor(model => model.CampusID, "CampusID", htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.DropDownList("CampusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CampusID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        
        <h2> Parents Details</h2>
        <hr/>
        

        <div class="form-group row">
            @Html.LabelFor(model => model.P_FirstName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.P_FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P_FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.P_LastName, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.P_LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P_LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group row">
            @Html.LabelFor(model => model.P_PhoneNo, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.P_PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P_PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.P_Occupation, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.P_Occupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P_Occupation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.P_Email, htmlAttributes: new {@class = "col-lg-3 control-label text-lg-right pt-2",@style= "font-weight: bold;"})
            <div class="col-lg-6">
                @Html.EditorFor(model => model.P_Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P_Email, "", new { @class = "text-danger" })
            </div>
        </div>

     


       
    <footer class="card-footer text-right">
        <input type="submit" href="/Students/NavTab" value="ADD"  class="btn btn-primary"/>
        <button type="reset" class="btn btn-default">@Html.ActionLink("Back", "NavTab")</button>
    </footer>

                     


    <div>
                           
    </div>



   
    </div>
            </section>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(function() {
            var dates = $("#DOB , #DOB").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                minDate : 0,
                maxDate : "+3Y",
                onSelect: function( selectedDate ) {
                    var option = this.id == "DOB" ? "minDate" : "maxDate",
                        instance = $( this ).data( "datepicker" );
                    date = $.datepicker.parseDate(
                        instance.settings.dateFormat ||
                        $.datepicker._defaults.dateFormat,
                        selectedDate, instance.settings );
                    dates.not( this ).datepicker( "option", option, date );
                }
            });
        });
    </script>
}
